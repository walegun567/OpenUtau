<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Menu-->
    <Style x:Key="{x:Type Menu}" TargetType="Menu">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border Background="White">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" SnapsToDevicePixels="True" Background="White">
            <Grid x:Name="Grid">
                <ContentPresenter Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                <Popup x:Name="SubMenuPopup" Placement="Bottom" Focusable="false"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Border SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="Gray" Background="White">
                        <StackPanel IsItemsHost="True" Margin="2" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrushActive}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrushActive}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" SnapsToDevicePixels="True" Background="White">
            <Grid x:Name="Grid">
                <ContentPresenter Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrushActive}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrushActive}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" SnapsToDevicePixels="True" Background="White">
            <Grid x:Name="Grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="MenuTextColumnGroup"/>
                    <ColumnDefinition Width="40" SharedSizeGroup="MenuSpaceColumnGroup"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="13" SharedSizeGroup="MenuMarkColumnGroup"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter Grid.Column="1" Name="HeaderHost" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                <TextBlock Grid.Column="3" x:Name="InputGestureText" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2"/>
                <Path Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Popup x:Name="SubMenuPopup" Placement="Right" Focusable="false" VerticalOffset="-3"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Border SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="Gray" Background="White">
                        <StackPanel IsItemsHost="True" Margin="2" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
                <!--<Popup x:Name="SubMenuPopup" Placement="Right" Focusable="false"
                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   AllowsTransparency="True">
                    <Grid Margin="0,0,5,5">
                        <Border x:Name="SubMenuBorder" BorderBrush="Gray" BorderThickness="1" Background="White" SnapsToDevicePixels="True">
                            <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Margin="2">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" Color="Black" Opacity="0.25"/>
                            </Border.Effect>
                        </Border>
                        <Border Margin="1,0,0,0" x:Name="TransitionBorder" Width="0" Height="2" VerticalAlignment="Top" HorizontalAlignment="Left" 
                                                Background="White" SnapsToDevicePixels="False" BorderThickness="1" BorderBrush="Red"/>
                    </Grid>
                </Popup>-->
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrushActive}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" SnapsToDevicePixels="True" Background="White">
            <Grid x:Name="Grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="MenuTextColumnGroup"/>
                    <ColumnDefinition Width="40" SharedSizeGroup="MenuSpaceColumnGroup"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="13" SharedSizeGroup="MenuMarkColumnGroup"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter Grid.Column="1" Name="HeaderHost" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                <TextBlock Grid.Column="3" x:Name="InputGestureText" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" TextAlignment="Left"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrushActive}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>