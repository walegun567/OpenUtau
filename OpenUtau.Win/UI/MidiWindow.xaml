<local:BorderlessWindow x:Class="OpenUtau.UI.MidiWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:OpenUtau.UI.Controls"
        xmlns:localvm="clr-namespace:OpenUtau.UI.Models"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
        xmlns:il="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions"
        xmlns:ib="clr-namespace:OpenUtau.UI.Behaviors"
        Style="{StaticResource ResourceKey=UBorderlessWindow}" Title="OpenUTAU" KeyDown="Window_KeyDown" Closing="Window_Closing">
    <i:Interaction.Behaviors>
        <ib:BorderlessWindowBehavior/>
    </i:Interaction.Behaviors>
    <Window.Resources>
        <localvm:MidiViewModel x:Key="midiVM"/>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushNormal}"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushNormal}"/>
        </Style>
    </Window.Resources>
    <local:BorderlessWindow.MenuContent>
        <Grid Width="100" Height="20">
            <ToggleButton x:Name="showVibratoToggle" Style="{StaticResource ShowPitchToggleButtonStyle}"
                          Width="20" Margin="0,0,0,0" HorizontalAlignment="Left" Focusable="False"
                          IsChecked="{Binding ShowVibrato, Source={StaticResource midiVM}}" ToolTip="Toggle vibrato (U)">
                <ToggleButton.Content>
                    <Grid Width="18" Height="18">
                        <Path Data="M-6.5 1 L-6 1.5 L-4.5 0 L-2 2.5 L0.5 0 L3 2.5 L6.5 -1 L6 -1.5 L4.5 0 L2 -2.5 L-0.5 0 L-3 -2.5 Z" StrokeThickness="1" 
                              Stroke="{Binding ElementName=showVibratoToggle, Path=Foreground}">
                            <Path.RenderTransform>
                                <TranslateTransform X="9" Y="9"/>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton x:Name="showPitchToggle" Style="{StaticResource ShowPitchToggleButtonStyle}"
                          Width="20" Margin="20,0,0,0" HorizontalAlignment="Left" Focusable="False"
                          IsChecked="{Binding ShowPitch, Source={StaticResource midiVM}}" ToolTip="Toggle pitch (I)">
                <ToggleButton.Content>
                    <Grid Width="18" Height="18">
                        <Ellipse Height="5" Width="5" StrokeThickness="1" Margin="2,0,0,4" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                 Stroke="{Binding ElementName=showPitchToggle, Path=Foreground}"/>
                        <Ellipse Height="5" Width="5" StrokeThickness="1" Margin="0,4,2,0" HorizontalAlignment="Right" VerticalAlignment="Top"
                                 Stroke="{Binding ElementName=showPitchToggle, Path=Foreground}"/>
                        <Path Data="M 6.5 11.5 L 8 11.5 L 8.5 11 L 9.5 7 L 10 6.5 L 11.5 6.5" StrokeThickness="1" 
                              Stroke="{Binding ElementName=showPitchToggle, Path=Foreground}"/>
                    </Grid>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton x:Name="showPhonemeToggle" Style="{StaticResource ShowPitchToggleButtonStyle}"
                          Width="20" Margin="40,0,0,0" HorizontalAlignment="Left" Focusable="False"
                          IsChecked="{Binding ShowPhoneme, Source={StaticResource midiVM}}" ToolTip="Toggle phoneme (O)">
                <ToggleButton.Content>
                    <Grid Width="18" Height="18">
                        <Path Data="M 3 13 L 6 5.5 L 12 5.5 L 15 13" StrokeThickness="1"
                              Stroke="{Binding ElementName=showPhonemeToggle, Path=Foreground}"/>
                    </Grid>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton x:Name="snapToggle" Style="{StaticResource ShowPitchToggleButtonStyle}"
                          Width="20" Margin="60,0,0,0" HorizontalAlignment="Left" Focusable="False"
                          IsChecked="{Binding Snap, Source={StaticResource midiVM}}" ToolTip="Toggle Snap (P)">
                <ToggleButton.Content>
                    <Grid Width="18" Height="18">
                        <Path Data="M 4.5 13.5 L 7.5 13.5 L 7.5 9.5 A 1,1 0 1 1 10.5,9.5 L 10.5 13.5 L 13.5 13.5 L 13.5 8.5 A 1,1 0 1 0 4.5,8.5 Z" StrokeThickness="1"
                              Stroke="{Binding ElementName=snapToggle, Path=Foreground}"/>
                    </Grid>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton x:Name="tipsToggle" Style="{StaticResource ShowPitchToggleButtonStyle}"
                          Width="20" Margin="80,0,0,0" HorizontalAlignment="Left" Focusable="False"
                          IsChecked="{Binding Tips, Source={StaticResource midiVM}}" ToolTip="Toggle Tips (T)">
                <ToggleButton.Content>
                    <Grid Width="18" Height="18">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="?" FontWeight="Bold"
                                   Foreground="{Binding ElementName=tipsToggle, Path=Foreground}"/>
                    </Grid>
                </ToggleButton.Content>
            </ToggleButton>
        </Grid>
    </local:BorderlessWindow.MenuContent>
    <Grid>
        <Grid x:Name="mainGrid" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="200"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="150" MinHeight="120" MaxHeight="450"/>
            </Grid.RowDefinitions>
            <Menu Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="24" Width="24" Margin="12,8,0,0">
                <MenuItem Margin="0" Padding="0">
                    <MenuItem.Header>
                        <Border Width="24" Height="24">
                            <Path Fill="{DynamicResource ScrollBarBrushNormal}"
                                  Data="M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2M20 16H5.2L4 17.2V4H20V16M16.8 11.3L15.7 10.5V10 9.5L16.8 8.7C16.9 8.6 16.9 8.5 16.9 8.4L15.9 6.7C15.8 6.6 15.7 6.5 15.6 6.6L14.3 7C14 6.8 13.8 6.6 13.4 6.5L13.2 5.2C13.2 5.1 13.1 5 13 5H11C10.9 5 10.8 5.1 10.8 5.2L10.6 6.5C10.3 6.7 10 6.8 9.7 7L8.5 6.5C8.4 6.5 8.3 6.5 8.2 6.6L7.2 8.3C7.1 8.4 7.2 8.5 7.3 8.6L8.4 9.4V10.4L7.3 11.2C7.2 11.3 7.2 11.4 7.2 11.5L8.2 13.2C8.3 13.3 8.4 13.4 8.5 13.3L9.7 13C10 13.2 10.2 13.4 10.5 13.5L10.7 14.8C10.7 14.9 10.8 15 11 15H13C13.1 15 13.2 14.9 13.2 14.8L13.4 13.5C13.7 13.4 14 13.2 14.2 13L15.4 13.5C15.5 13.5 15.6 13.5 15.7 13.4L16.7 11.7C16.9 11.5 16.9 11.4 16.8 11.3M12 11.5C11.2 11.5 10.5 10.8 10.5 10S11.2 8.5 12 8.5 13.5 9.2 13.5 10 12.8 11.5 12 11.5Z" />
                        </Border>
                    </MenuItem.Header>
                    <MenuItem Header="Transformers" ItemsSource="{Binding Transformers, Source={StaticResource midiVM}}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding TransformerCommand, Source={StaticResource midiVM}}" />
                                <Setter Property="CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Header="Legacy Plugins" ItemsSource="{Binding Plugins, Source={StaticResource midiVM}}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding PluginCommand, Source={StaticResource midiVM}}" />
                                <Setter Property="CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </MenuItem>
            </Menu>
            <Grid x:Name="timelineBackgroundGrid" Grid.Row="0" VerticalAlignment="Top" Height="20" Margin="48,20,20,0" ClipToBounds="True">
                <local:TimelineBackground x:Name="timelineBackground" QuarterOffset="{Binding QuarterOffset, Source={StaticResource midiVM}}"
                                      QuarterWidth="{Binding QuarterWidth, Source={StaticResource midiVM}}" OffsetX="{Binding OffsetX, Source={StaticResource midiVM}}"
                                      MinTickWidth="{Binding MinTickWidth, Source={StaticResource midiVM}}" BeatPerBar="{Binding BeatPerBar, Source={StaticResource midiVM}}"
                                      BeatUnit="{Binding BeatUnit, Source={StaticResource midiVM}}"/>
            </Grid>
            <Canvas x:Name="timelineCanvas" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="20" Margin="48,20,20,0"
                    Background="Transparent" ClipToBounds="True"
                    MouseWheel="timelineCanvas_MouseWheel" MouseLeftButtonDown="timelineCanvas_MouseLeftButtonDown" MouseMove="timelineCanvas_MouseMove" MouseLeftButtonUp="timelineCanvas_MouseLeftButtonUp"/>
            <Grid x:Name="notesBackgroundGrid" Grid.Row="0" ClipToBounds="True" Margin="48,40,20,0">
                <local:KeyTrackBackground x:Name="keyTrackBackground" TrackHeight="{Binding TrackHeight, Source={StaticResource midiVM}}"
                    OffsetY="{Binding OffsetY, Source={StaticResource midiVM}}"
                    local:SizeObserver.Observe="True"
                    local:SizeObserver.ObservedHeight="{Binding ViewHeight, Source={StaticResource midiVM}, Mode=OneWayToSource}"
                    local:SizeObserver.ObservedWidth="{Binding ViewWidth, Source={StaticResource midiVM}, Mode=OneWayToSource}"/>
                <local:TickBackground x:Name="tickBackground" QuarterOffset="{Binding QuarterOffset, Source={StaticResource midiVM}}"
                    QuarterWidth="{Binding QuarterWidth, Source={StaticResource midiVM}}" OffsetX="{Binding OffsetX, Source={StaticResource midiVM}}"
                    MinTickWidth="{Binding MinTickWidth, Source={StaticResource midiVM}}" BeatPerBar="{Binding BeatPerBar, Source={StaticResource midiVM}}"
                    BeatUnit="{Binding BeatUnit, Source={StaticResource midiVM}}"/>
            </Grid>
            <Canvas x:Name="notesCanvas" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="48,40,20,0" Background="Transparent"
                    ClipToBounds="True" SnapsToDevicePixels="True"
                    MouseLeftButtonDown="notesCanvas_MouseLeftButtonDown" MouseRightButtonDown="notesCanvas_MouseRightButtonDown"
                    MouseLeftButtonUp="notesCanvas_MouseLeftButtonUp" MouseMove="notesCanvas_MouseMove" MouseWheel="notesCanvas_MouseWheel" MouseRightButtonUp="notesCanvas_MouseRightButtonUp"/>
            <Rectangle x:Name="phonemeCanvasShadow" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="48,40,20,48" Height="5"
                       SnapsToDevicePixels="True" Opacity="0.15" IsHitTestVisible="False"
                       Visibility="{Binding PhonemeVisibility, Source={StaticResource midiVM}}">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="Transparent" Offset="0"/>
                        <GradientStop Color="Black" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Canvas x:Name="phonemeCanvas" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="48,40,20,0" Height="48"
                    ClipToBounds="True" SnapsToDevicePixels="True" Background="{DynamicResource BackgroundBrushNormal}" Opacity="0.75"
                    Visibility="{Binding PhonemeVisibility, Source={StaticResource midiVM}}"
                    MouseLeftButtonDown="phonemeCanvas_MouseLeftButtonDown"
                    MouseLeftButtonUp="phonemeCanvas_MouseLeftButtonUp"
                    MouseRightButtonDown="phonemeCanvas_MouseRightButtonDown"
                    MouseRightButtonUp="phonemeCanvas_MouseRightButtonUp"
                    MouseMove="phonemeCanvas_MouseMove"/>
            <ScrollBar x:Name="horizontalScroll" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="20" Margin="48,0,20,0" Orientation="Horizontal" Minimum="0"
                       Maximum="{Binding TotalWidth, Mode=OneWay, Source={StaticResource midiVM}}"
                       Value="{Binding OffsetX, Mode=TwoWay, Source={StaticResource midiVM}, UpdateSourceTrigger=PropertyChanged}"
                       ViewportSize="{Binding ViewportSizeX, Source={StaticResource midiVM}}"
                       LargeChange="{Binding ViewportSizeX, Source={StaticResource midiVM}}"
                       SmallChange="{Binding SmallChangeX, Source={StaticResource midiVM}}">
                <i:Interaction.Behaviors>
                    <ib:ScrollbarBehavior/>
                </i:Interaction.Behaviors>
            </ScrollBar>
            <ScrollBar x:Name="verticalScroll" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="20" Margin="48,40,0,0" Orientation="Vertical" Minimum="0"
                       Maximum="{Binding TotalHeight, Mode=OneWay, Source={StaticResource midiVM}}"
                       Value="{Binding OffsetY, Mode=TwoWay, Source={StaticResource midiVM}, UpdateSourceTrigger=PropertyChanged}"
                       ViewportSize="{Binding ViewportSizeY, Source={StaticResource midiVM}}"
                       LargeChange="{Binding ViewportSizeY, Source={StaticResource midiVM}}"
                       SmallChange="{Binding SmallChangeY, Source={StaticResource midiVM}}">
                <i:Interaction.Behaviors>
                    <ib:ScrollbarBehavior/>
                </i:Interaction.Behaviors>
            </ScrollBar>
            <local:NavigateDrag x:Name="navigateDrag" HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" Margin="0,0,0,0" NavDrag="navigateDrag_NavDrag"/>
            <local:ViewScaler x:Name="viewScaler" HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" Margin="0,20,0,0"/>
            <Border x:Name="notesCanvasShadow" Grid.Row="0" Background="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="48,20,20,0" BorderThickness="0" ClipToBounds="True">
                <Border Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Margin="-1">
                    <Border.Effect>
                        <DropShadowEffect Color="Black" ShadowDepth="0" BlurRadius="5" Opacity="0.75"/>
                    </Border.Effect>
                    <Grid>
                        <local:LyricBox x:Name="LyricBox" Width="360" Height="28" Margin="0,4,0,0" Visibility="Hidden"/>
                        <Border Style="{StaticResource TipsBorder}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                Visibility="{Binding TipsVisible, Source={StaticResource midiVM}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" TextAlignment="Right" Style="{StaticResource TipsText}" Margin="10,0,3,0"
                                           Text="{DynamicResource tip.notes.basics.keys}"/>
                                <TextBlock Grid.Column="2" TextAlignment="Left" Style="{StaticResource TipsText}" Margin="3,0,10,0"
                                           Text="{DynamicResource tip.notes.basics.actions}"/>
                            </Grid>
                        </Border>
                        <Border Style="{StaticResource TipsBorder}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="2"
                                 Visibility="{Binding TipsVisible, Source={StaticResource midiVM}}">
                            <TextBlock Style="{StaticResource TipsText}" Text="{DynamicResource tip.notes.zoomx}"/>
                        </Border>
                        <Border Style="{StaticResource TipsBorder}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="2"
                                 Visibility="{Binding TipsVisible, Source={StaticResource midiVM}}">
                            <TextBlock Style="{StaticResource TipsText}" Text="{DynamicResource tip.notes.zoomy}"/>
                        </Border>
                    </Grid>
                </Border>
            </Border>
            <Grid x:Name="keyboardBackgroundGrid" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="48" Margin="0,40,0,0" ClipToBounds="True">
                <local:KeyboardBackground x:Name="keyboardBackground" TrackHeight="{Binding TrackHeight, Source={StaticResource midiVM}}"
                                          OffsetY="{Binding OffsetY, Source={StaticResource midiVM}}"/>
                <Canvas x:Name="keysCanvas" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="48" Margin="0,40,0,0" Background="Transparent"
                        ClipToBounds="True" MouseLeftButtonDown="keysCanvas_MouseLeftButtonDown" MouseLeftButtonUp="keysCanvas_MouseLeftButtonUp"
                        MouseMove="keysCanvas_MouseMove" MouseWheel="keysCanvas_MouseWheel"/>
            </Grid>
            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="10" Margin="0,0,0,0" Background="{StaticResource BackgroundBrushNormal}" Focusable="False"/>
            <Grid x:Name="expBackgroundGrid" Grid.Row="2" ClipToBounds="True" Margin="48,0,20,1">
                <local:TickBackground x:Name="expTickBackground" QuarterOffset="{Binding QuarterOffset, Source={StaticResource midiVM}}"
                    QuarterWidth="{Binding QuarterWidth, Source={StaticResource midiVM}}" OffsetX="{Binding OffsetX, Source={StaticResource midiVM}}"
                    MinTickWidth="{Binding MinTickWidth, Source={StaticResource midiVM}}" BeatPerBar="{Binding BeatPerBar, Source={StaticResource midiVM}}"
                    BeatUnit="{Binding BeatUnit, Source={StaticResource midiVM}}"/>
            </Grid>
            <Grid x:Name="CCGrid" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="48" Margin="0,0,0,1">
                <local:ExpComboBox x:Name="expCombo0" VerticalAlignment="Top" Margin="0,0,0,0"/>
                <local:ExpComboBox x:Name="expCombo1" VerticalAlignment="Top" Margin="0,22,0,0"/>
                <local:ExpComboBox x:Name="expCombo2" VerticalAlignment="Top" Margin="0,44,0,0"/>
                <local:ExpComboBox x:Name="expCombo3" VerticalAlignment="Top" Margin="0,66,0,0"/>
                <Button Style="{StaticResource FlatButton}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="20" Height="20" Click="expGearButton_Click">
                    <Path Width="24" Height="24"
                          Data="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z"
                          Fill="{Binding Foreground, FallbackValue=Black, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}">
                        <Path.LayoutTransform>
                            <ScaleTransform ScaleX=".75" ScaleY=".75"/>
                        </Path.LayoutTransform>
                    </Path>
                </Button>
            </Grid>
            <Canvas x:Name="expCanvas" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="48,0,20,1" Background="Transparent" ClipToBounds="True"
                    MouseLeftButtonDown="expCanvas_MouseLeftButtonDown" MouseLeftButtonUp="expCanvas_MouseLeftButtonUp"
                    MouseRightButtonDown="expCanvas_MouseRightButtonDown" MouseRightButtonUp="expCanvas_MouseRightButtonUp" MouseMove="expCanvas_MouseMove">
                <Popup x:Name="valueTip" Placement="Relative" PlacementTarget="{Binding ElementName=expCanvas}">
                    <Border Background="{DynamicResource BackgroundBrushNormal}" BorderThickness="1" BorderBrush="{DynamicResource ScrollBarBrushActive}">
                        <TextBlock x:Name="valueTipText" Margin="2,0">100</TextBlock>
                    </Border>
                </Popup>
            </Canvas>
            <ScrollBar x:Name="expVerticalScroll" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="20"
                       Margin="0,0,0,20" Orientation="Vertical" ViewportSize="10000"/>
            <Border x:Name="expCanvasShadow" Grid.Row="2" Background="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="48,0,20,1" BorderThickness="0" ClipToBounds="True">
                <Border Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Margin="-1">
                    <Border.Effect>
                        <DropShadowEffect Color="Black" ShadowDepth="0" BlurRadius="5" Opacity="0.75"/>
                    </Border.Effect>
                    <Border Style="{StaticResource TipsBorder}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                Visibility="{Binding TipsVisible, Source={StaticResource midiVM}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" TextAlignment="Right" Style="{StaticResource TipsText}" Margin="10,0,3,0"
                                           Text="{DynamicResource tip.exps.keys}"/>
                            <TextBlock Grid.Column="2" TextAlignment="Left" Style="{StaticResource TipsText}" Margin="3,0,10,0"
                                           Text="{DynamicResource tip.exps.actions}"/>
                        </Grid>
                    </Border>
                </Border>
            </Border>
        </Grid>
    </Grid>
</local:BorderlessWindow>
