<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="using:OpenUtau.App.ViewModels"
        xmlns:c="clr-namespace:OpenUtau.App.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="OpenUtau.App.Views.MainWindow"
        Icon="/Assets/open-utau.ico"
        Title="OpenUtau (Beta)" MinWidth="300" MinHeight="200" KeyDown="OnKeyDown" Closing="WindowClosing"
        TransparencyLevelHint="None" Background="{DynamicResource MainWindowBackgroundBrush}"
        ExtendClientAreaToDecorationsHint="False">
  <Grid>
    <Grid RowDefinitions="24,24,1*,20,4" ColumnDefinitions="250,*,24" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="{Binding $parent[1].WindowDecorationMargin}">
      <Menu Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left">
        <MenuItem Header="{DynamicResource menu.file}">
          <MenuItem Header="{DynamicResource menu.file.new}" InputGesture="Ctrl+N" Click="OnMenuNew"/>
          <MenuItem Header="{DynamicResource menu.file.open}" InputGesture="Ctrl+O" Click="OnMenuOpen"/>
          <MenuItem Header="{DynamicResource menu.file.save}" InputGesture="Ctrl+S" Click="OnMenuSave"/>
          <MenuItem Header="{DynamicResource menu.file.saveas}" Click="OnMenuSaveAs"/>
          <MenuItem Header="{DynamicResource menu.file.importtracks}" Click="OnMenuImportTracks"/>
          <MenuItem Header="{DynamicResource menu.file.importaudio}" Click="OnMenuImportAudio"/>
          <MenuItem Header="{DynamicResource menu.file.importmidi}" Click="OnMenuImportMidi"/>
          <MenuItem Header="{DynamicResource menu.file.exportall}"/>
          <MenuItem Header="{DynamicResource menu.file.exportust}"/>
        </MenuItem>
        <MenuItem Header="{DynamicResource menu.tools}">
          <MenuItem Header="{DynamicResource menu.tools.layout}">
            <MenuItem Header="{DynamicResource menu.tools.layout.vsplit11}" Click="OnMenuLayoutVSplit11"/>
            <MenuItem Header="{DynamicResource menu.tools.layout.vsplit12}" Click="OnMenuLayoutVSplit12"/>
            <MenuItem Header="{DynamicResource menu.tools.layout.vsplit13}" Click="OnMenuLayoutVSplit13"/>
            <MenuItem Header="{DynamicResource menu.tools.layout.hsplit11}" Click="OnMenuLayoutHSplit11"/>
            <MenuItem Header="{DynamicResource menu.tools.layout.hsplit12}" Click="OnMenuLayoutHSplit12"/>
            <MenuItem Header="{DynamicResource menu.tools.layout.hsplit13}" Click="OnMenuLayoutHSplit13"/>
          </MenuItem>
          <MenuItem Header="{DynamicResource menu.tools.project.expressions}" Click="OnMenuExpressionss"/>
          <MenuItem Header="{DynamicResource menu.tools.singers}" Click="OnMenuSingers"/>
          <MenuItem Header="{DynamicResource menu.tools.singer.install}" Click="OnMenuInstallSinger"/>
          <MenuItem Header="{DynamicResource menu.tools.singer.installadv}" Click="OnMenuInstallSingerAdvanced"/>
          <MenuItem Header="{DynamicResource menu.tools.prefs}" Click="OnMenuPreferences"/>
        </MenuItem>
        <MenuItem Header="{DynamicResource menu.help}">
          <MenuItem Header="{Binding AppVersion}"/>
          <MenuItem Header="{DynamicResource menu.help.wiki}" Click="OnMenuWiki"/>
        </MenuItem>
      </Menu>
      <Panel Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="24">
        <Border Classes="playback" Width="72" HorizontalAlignment="Left" Margin="4,0">
          <Grid>
            <TextBlock Width="28" HorizontalAlignment="Left"
                       Background="Transparent" PointerPressed="OnEditTimeSignature">
              <TextBlock.Text>
                <MultiBinding StringFormat="{}{0}/{1}">
                  <Binding Path="PlaybackViewModel.BeatPerBar"/>
                  <Binding Path="PlaybackViewModel.BeatUnit"/>
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
            <TextBlock Width="42" HorizontalAlignment="Right"
                        Background="Transparent" PointerPressed="OnEditBpm">
              <TextBlock.Text>
                <MultiBinding StringFormat="{}{0:#0.00}">
                  <Binding Path="PlaybackViewModel.Bpm"/>
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
          </Grid>
        </Border>
        <Border Classes="playback" Width="88" HorizontalAlignment="Center">
          <StackPanel Orientation="Horizontal">
            <Button Command="{Binding PlaybackViewModel.SeekStart}">
              <Path Fill="{Binding $parent.Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"
                    Data="M 0 0 L 2 0 L 2 9 L 0 9 Z M 2 4.5 L 7 0 L 7 9 Z"/>
            </Button>
            <Button Click="OnPlayOrPause">
              <Path Fill="{Binding $parent.Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"
                    Data="M 0 0 L 7 6.5 L 0 13 Z"/>
            </Button>
            <Button Command="{Binding PlaybackViewModel.Pause}">
              <Path Fill="{Binding $parent.Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"
                    Data="M 0 0 L 2 0 L 2 9 L 0 9 Z M 4 0 L 6 0 L 6 9 L 4 9 Z"/>
            </Button>
            <Button Command="{Binding PlaybackViewModel.SeekEnd}">
              <Path Fill="{Binding $parent.Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"
                    Data="M 0 0 L 5 4.5 L 0 9 Z M 5 0 L 7 0 L 7 9 L 5 9 Z"/>
            </Button>
          </StackPanel>
        </Border>
        <Border Classes="playback" Width="72" HorizontalAlignment="Right" Margin="4,0">
          <Grid>
            <TextBlock Text="{Binding Path=PlaybackViewModel.PlayPosTime, StringFormat={}{0:mm\\:ss\\.fff}}"/>
          </Grid>
        </Border>
      </Panel>
      <ScrollBar Name="HScrollBar" Classes="music" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 Margin="0,4,0,4" Orientation="Horizontal" AllowAutoHide="False"
                 DataContext="{Binding TracksViewModel}"
                 Maximum="{Binding HScrollBarMax, Mode=OneWay}"
                 Value="{Binding TickOffset}"
                 ViewportSize="{Binding ViewportTicks}"
                 LargeChange="{Binding ViewportTicks}"
                 SmallChange="{Binding SmallChangeX}" PointerWheelChanged="HScrollPointerWheelChanged"/>
      <ScrollBar Name="VScrollBar" Classes="music" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 Margin="4,0,4,0" Orientation="Vertical" AllowAutoHide="False"
                 DataContext="{Binding TracksViewModel}"
                 Maximum="{Binding VScrollBarMax, Mode=OneWay}"
                 Value="{Binding TrackOffset}"
                 ViewportSize="{Binding ViewportTracks}"
                 LargeChange="{Binding ViewportTracks}"
                 SmallChange="{Binding SmallChangeY}" PointerWheelChanged="VScrollPointerWheelChanged"/>
      <Canvas Name="TimelineCanvas" Grid.Row="1" Grid.Column="1"
              Background="Transparent" ClipToBounds="True"
              PointerWheelChanged="TimelinePointerWheelChanged"
              PointerPressed="TimelinePointerPressed"
              PointerMoved="TimelinePointerMoved"
              PointerReleased="TimelinePointerReleased">
        <Path Name="PlayPos"
              Canvas.Left="{Binding TracksViewModel.PlayPosX}"
              Canvas.Top="0" ZIndex="100" IsHitTestVisible="False"
              Fill="{DynamicResource NeutralAccentBrushSemi}"
              Data="M -6.5 0 L 6.5 0 L 6.5 3 L 0 9 L -6.5 3 Z"/>
      </Canvas>
      <c:TrackHeaderCanvas Grid.Row="2" Grid.Column="0" ClipToBounds="True" Background="Transparent"
                           DataContext="{Binding TracksViewModel}"
                           TrackHeight="{Binding TrackHeight}"
                           TrackOffset="{Binding TrackOffset}"
                           Items="{Binding Tracks}" DoubleTapped="TrackHeaderCanvasDoubleTapped"/>
      <c:TrackBackground Grid.Row="2" Grid.Column="1" Margin="0" IsHitTestVisible="False"
                         Foreground="{DynamicResource TrackBackgroundAltBrush}"
                         DataContext="{Binding TracksViewModel}"
                         Bounds="{Binding Bounds, Mode=OneWayToSource}"
                         TrackHeight="{Binding TrackHeight}"
                         TrackOffset="{Binding TrackOffset}"/>
      <c:TickBackground Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Margin="0" IsHitTestVisible="False"
                        Foreground="{DynamicResource TickLineBrush}"
                        Background="{DynamicResource TickLineBrushLow}"
                        BeatPerBar="{Binding PlaybackViewModel.BeatPerBar}"
                        BeatUnit="{Binding PlaybackViewModel.BeatUnit}"
                        Resolution="{Binding PlaybackViewModel.Resolution}"
                        TickWidth="{Binding TracksViewModel.TickWidth}"
                        TickOffset="{Binding TracksViewModel.TickOffset}"
                        SnapUnit="{Binding TracksViewModel.SnapUnit}" ShowBarNumber="True"/>
      <c:PartsCanvas x:Name="partsCanvas" Grid.Row="2" Grid.Column="1" ClipToBounds="True" Background="Transparent"
                     DataContext="{Binding TracksViewModel}"
                     TickWidth="{Binding TickWidth}"
                     TrackHeight="{Binding TrackHeight}"
                     TickOffset="{Binding TickOffset}"
                     TrackOffset="{Binding TrackOffset}"
                     Items="{Binding Parts}"
                     PointerPressed="PartsCanvasPointerPressed"
                     PointerMoved="PartsCanvasPointerMoved"
                     PointerReleased="PartsCanvasPointerReleased"
                     DoubleTapped="PartsCanvasDoubleTapped"
                     PointerWheelChanged="PartsCanvasPointerWheelChanged">
        <Rectangle Name="PlayPosHighlight"
                   Width="{Binding SnapUnitWidth, Mode=OneWay}"
                   Height="{Binding $parent.Bounds.Height, Mode=OneWay}"
                   Canvas.Left="{Binding PlayPosHighlightX, Mode=OneWay}"
                   Canvas.Top="0"
                   Fill="{DynamicResource NeutralAccentBrushSemi2}"
                   IsHitTestVisible="False"/>
      </c:PartsCanvas>
      <Border Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"
              BoxShadow="inset 0 0 5 1 #7f7F7F7F" ClipToBounds="True" IsHitTestVisible="False">
      </Border>
      <Border Grid.Row="1" Grid.Column="2" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0" Height="24" PointerWheelChanged="ViewScalerPointerWheelChanged">
        <c:ViewScaler Name="VScaler" DataContext="{Binding TracksViewModel}" Value="{Binding TrackHeight}" Min="{Binding TrackHeightMin}" Max="{Binding TrackHeightMax}"/>
      </Border>
      <TextBlock Grid.Row="3" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="20" Text="{Binding ProgressText}"/>
      <ProgressBar Grid.Row="4" Grid.ColumnSpan="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Value="{Binding Progress}"/>
    </Grid>
  </Grid>
</Window>
